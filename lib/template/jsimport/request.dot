import chai from 'chai'
import chaiHttp from 'chai-http'
import schema from '{{jsonSchemaPath}}'
import requestHelper from '{{helperPath}}'
import config from '{{configPath}}'
chai.use(chaiHttp)

class pages {
    constructor() {
		// Write your constructor here, if you need
		this.api = chai.request(new config().env().host) // Set up the api with the endpoint based on the environment and change this according to endpoint service
		this.path = "{{endpoint}}" // Set up the API path to the route endpoint
    }

    // This method handles making the HTTP request based on given arguments.
    request(...args) {
		// Send HTTP POST request to the specified path and send the required body with params extracted from args.
		const response = this.api.{{method}}(this.path){{query}}{{header}}{{bodyFunc}}
		// Finally, end the request by returning expected behavior by analyzing input args
		.end(new requestHelper().getExpectFunc(args))
		
		// Return the complete response
		return response
    }
  
    // This method used for provide body or payload of the request and return object
    body(...args) {
		// your rawJSON body
		let obj = {{objectBody}}

		// mapping your changes
		new requestHelper().objectMapping(obj, args)

		// Return it
		return obj
    }

	// This method used for provide expectation and return json schema
    expect(cases="success") {
		return new requestHelper().getSchema(new schema().json(), cases)
    }
}

export default pages